[package]
name = "test_compile_on_stable"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# We do not use test_harness, because that requires nightly.
utils = { path = "../00_utils" }
on_heap-bytes-own_mut-string = { path = "../01_on_heap-bytes-own_mut-string" }
no_heap-chars-own_mut-array-const_overall-limit= { path = "../02_no_heap-chars-own_mut-array-const_overall-limit" }
no_heap-bytes-own_mut-array-const_overall-limit= { path = "../03_no_heap-bytes-own_mut-array-const_overall-limit" }
no_heap-bytes-own_mut-array-const_overall-limit-unsafe_str = { path = "../04_no_heap-bytes-own_mut-array-const_overall-limit-unsafe_str" }
no_heap-bytes-own_mut-array-const_generic-exact = { path = "../05_no_heap-bytes-own_mut-array-const_generic-exact" }
no_heap-bytes-own_mut-array-const_generic-limit = { path = "../06_no_heap-bytes-own_mut-array-const_generic-limit" }
no_heap-bytes-ref_mut-slice-pass_in_storage-mut_anytime = { path = "../07_no_heap-bytes-ref_mut-slice-pass_in_storage-mut_anytime" }

no_heap-bytes-ref_mix-slice-pass_in_storage-mut_initial-macro = { path = "../08_no_heap-bytes-ref_mix-slice-pass_in_storage-mut_initial-macro" }
on_heap-bytes-ref_shr-slice-dispatch_dyn-map = { path = "../09_on_heap-bytes-slice-dispatch_dyn-map" }
no_heap-bytes-ref_shr-slice-dispatch_sta-iterator_enum = { path = "../10_no_heap-bytes-ref_shr-slice-dispatch_sta-iterator_enum" }
no_heap-bytes-ref_shr-slice-dispatch_sta-iterator_impl = { path = "../11_no_heap-bytes-ref_shr-slice-dispatch_sta-iterator_impl" }
no_heap-bytes-ref_shr-slice-dispatch_dyn-eq_branch_iterators = { path = "../12_no_heap-bytes-ref_shr-slice-dispatch_dyn-eq_branch_iterators" }
no_heap-bytes-ref_shr-slice-dispatch_sta-eq_branch_iterators-matrix = { path = "../13_no_heap-bytes-ref_shr-slice-dispatch_sta-eq_branch_iterators-matrix" }
no_heap-bytes-ref_shr-slice-dispatch_sta-eq_iterator_to_generic_fn = { path = "../14_no_heap-bytes-ref_shr-slice-dispatch_sta-eq_iterator_to_generic_fn" }
no_heap-bytes-ref_shr-slice-dispatch_dyn-eq_dispatch_to_specialized = { path = "../15_no_heap-bytes-ref_shr-slice-dispatch_dyn-eq_dispatch_to_specialized" }
no_heap-bytes-ref_shr-slice-dispatch_dyn-eq_dispatch_to_universal = { path = "../16_no_heap-bytes-ref_shr-slice-dispatch_dyn-eq_dispatch_to_universal" }
